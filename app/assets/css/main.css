@import "tailwindcss";
@import "@nuxt/ui";

@theme {
  --color-brand-50: #ecf0ff;
  --color-brand-100: #d8e1ff;
  --color-brand-200: #b5c7ff;
  --color-brand-300: #90a8ff;
  --color-brand-400: #6d8bff;
  --color-brand-500: #4f72f2;
  --color-brand-600: #3d63dd;
  --color-brand-700: #2f4ec0;
  --color-brand-800: #273f99;
  --color-brand-900: #21347b;
  --color-brand-950: #141f49;

  --color-accent-50: #fff8e8;
  --color-accent-100: #ffedc6;
  --color-accent-200: #fdd788;
  --color-accent-300: #fcc05a;
  --color-accent-400: #f8b84a;
  --color-accent-500: #eba437;
  --color-accent-600: #cc8626;
  --color-accent-700: #a46b1f;
  --color-accent-800: #7c5218;
  --color-accent-900: #533611;
  --color-accent-950: #301d08;

  --color-surface-base: #f7f8fc;
  --color-surface-elevated: #ffffff;
  --color-text-primary: #1b1f24;
  --color-text-muted: #5b6474;
  --color-border-default: #e0e5f2;

  --radius-base: 0.75rem; /* 12px */
  --radius-xl: 1rem;
  --radius-2xl: 1.25rem;
  --radius-pill: 9999px;

  --spacing-3-5: 0.875rem;
  --spacing-4-5: 1.125rem;
  --spacing-7-5: 1.875rem;

  --shadow-subtle: 0 10px 30px -16px rgba(61, 99, 221, 0.28);
}

@layer base {
  :root {
    --ui-primary: var(--color-brand-600);
    --ui-primary-light: var(--color-brand-400);
    --ui-accent: var(--color-accent-500);
  }

  body {
    background-color: var(--color-surface-base);
    color: var(--color-text-primary);
    /* Ensure body doesn't create stacking context that interferes with portals */
    position: relative;
    z-index: 0;
  }

  .skip-link {
    position: absolute;
    left: 50%;
    transform: translate(-50%, -200%);
    padding: 0.75rem 1.5rem;
    border-radius: 9999px;
    background-color: var(--color-brand-600);
    color: #fff;
    font-weight: 600;
    transition: transform 0.2s ease;
    z-index: 100;
  }

  .skip-link:focus {
    transform: translate(-50%, 0.75rem);
    outline: none;
  }
}

/* Ensure interactive native/button elements show pointer cursor.
   Some utilities injected via `app.config.ts` might not be picked up by
   the Tailwind scanner, so provide a small, safe fallback here. */
@layer base {
  button,
  [role="button"],
  input[type="button"],
  input[type="submit"] {
    cursor: pointer;
  }

  button:disabled,
  [disabled],
  [aria-disabled="true"] {
    cursor: not-allowed;
  }
}

/* Fix for overlay/slideover visibility issues
   
   Issue: Nuxt UI v4 uses Reka UI which teleports overlays to portal containers.
   The header has z-50, so overlays need higher z-index values to appear above it.
   
   Root cause: Stacking contexts created by transforms, filters, or other CSS properties
   can prevent teleported overlays from appearing even with high z-index.
   
   Solution: 
   1. Use `isolate` class on root to create proper stacking context
   2. Target portal containers with z-index > 50 (header's z-index)
   3. Ensure dialog elements have proper positioning and pointer events
   4. Let animations work naturally - don't override transforms globally */

/* Ensure proper stacking context isolation at root level */
.isolate {
  isolation: isolate;
}

/* Target all portal containers that Nuxt UI/Reka UI might create
   These are teleported directly to body and need high z-index */
body > [data-reka-portal],
body > [data-radix-portal],
body > div[data-teleport],
body > div[data-overlay] {
  position: fixed !important;
  z-index: 9999 !important;
  inset: 0 !important;
  pointer-events: none !important;
}

/* Dialog/overlay content within portals needs pointer events */
[data-reka-portal] [role="dialog"],
[data-radix-portal] [role="dialog"],
[data-reka-portal] [data-state="open"],
[data-radix-portal] [data-state="open"] {
  pointer-events: auto !important;
}

/* Ensure dialog wrapper has proper positioning */
[role="dialog"][data-state="open"] {
  position: fixed !important;
  z-index: 9999 !important;
}
